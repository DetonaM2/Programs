#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

void sequencial(int vetor[15],int tam){
	
	int x, i; 
	float encontrado=0;
	printf("Informe o valor que seja encontrar: ");
	scanf("%d",&x);
	system("cls");
	for(i=0;i<tam;i++){
		if(vetor[i]==x){
			encontrado = 1;
			printf("Valor %d encontrado na posição %d do vetor ordenado\n",x,i+1);
			
		}
		
	}
	if(encontrado == 1){
		system("pause");
	}
	else{
		printf("Valor %d não encontrado\n",x);
		system("pause");
	}
	
}

void binario(int vetor[15], int tam){
	
	int i, x, esquerda, direita, meio,aux=0; 
	float encontrado = 0;
	esquerda = -1;
	direita = tam;
	printf("Informe o valor que seja encontrar: ");
	scanf("%d",&x);
	meio=(esquerda+direita)/2;
	while(encontrado != 1 && esquerda <= direita){
		aux++;
		printf("\nMeio = %d\nEsquerda = %d\nDireita = %d\nNumero de operações = %d\n",meio,esquerda,direita,aux);
		if(vetor[meio] == x){
			encontrado = 1;
			printf("\nValor %d encontrado\n",x);
		}
		else{
			if(x > vetor[meio]){
				esquerda = meio + 1;
			}
			else{
				direita = meio - 1;
			}
			meio=(esquerda+direita)/2;
		}
	}
	if(encontrado == 1){
		system("pause");
	}
	else{
		printf("Valor %d não encontrado\n",x);
		system("pause");
	}
		
}

void bolha (int vetor[15], int tam){

	int i, j, aux;
	for (i = tam; i >= 1; i--) {
	    for (j = 1; j < i; j++) {
	    	if (vetor[j-1] > vetor[j]) {
		        aux = vetor[j];
		        vetor[j] = vetor[j-1];
		        vetor[j-1] = aux;
		      }
		}
	}
  
return vetor;
}

int main() {
setlocale(LC_ALL, "Portuguese");

int tam = 15, op=-1, k;	
int vetor[15] = {1, 5, 6, 7, 12, 17, 22, 45, 65, 98, 100, 120, 150, 200, 231};

bolha(vetor,tam);

while(op!=0){
	system("cls");
	printf("1- Busca Sequencial\n2- Busca Binária\n0- Sair\nDigite o valor referente ao metodo de busca: ");
	scanf("%d",&op);
	if(op == 1){
		system("cls");	
		sequencial(vetor,tam);
	}
	if(op == 2){
		system("cls");
		binario(vetor,tam);
	}
	if(op == 0){
		system("cls");
		printf("Finalizando programa !!\n");
		system("pause");
	}
}

	
	return 0;
}