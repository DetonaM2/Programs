#include "ordenacao.h"

void insere(int *num, int *aux){
	srand( (unsigned)time(NULL) );
	for(i=0;i<max;i++){
		aux[i] = rand() % 10000;
		num[i]=num[i];
	}
	printf("\n\n\t\t\tNumeros adicionados!!\n\n\n\n\t");
	system("pause");
}

void imprime_lista(int *aux){
	int z=1;
	for(i=0;i<max;i+=5){
		printf("\t%d------> %d\t%d\t%d\t%d\t%d\n",z,aux[i],aux[i+1],aux[i+2],aux[i+3],aux[i+4]);
		z++;
	}
	printf("\t");
	system("pause");
}
 void comparar(int *num){
 	int z=1;
 	for(i=0;i<max;i+=5){
 		printf("\t%d:------> %d\t%d\t%d\t%d\t%d\n",z,num[i],num[i+1],num[i+2],num[i+3],num[i+4]);
 		z++;
 	}
 	printf("\n\t");
 	system("pause");
 }

 void bolha(int *num){
 	
 	for(i=max-1; i>=1; i--){
 		int troca = 0;
 		for(j=0; j<i; j++){
 			if (num[j]>num[j+1]){
	 			int temp = num[j];
	 			num[j] = num[j+1];
	 			num[j+1] = temp;
	 			troca = 1;
			}
 		}
 		if(troca == 0){
 			return;
 		}
 	}
}

void selecao(int *num){
	int min,aux;
	for (i=0; i<max-1; i++){
	min = i;
	for (j= i + 1 ; j < max; j++){
		if (num[j]<num[min]){
			min = j;
		}
	}
	aux = num[min];
	num[min] = num[i];
	num[i] = aux;
	}
}
void insercao(int *num) { 
    int key; 
    for (i = 1; i < max; i++) { 
        key = num[i]; 
        j = i - 1; 
        while (j >= 0 && num[j] > key) { 
            num[j + 1] = num[j]; 
            j--; 
        } 
        num[j + 1] = key; 
    } 
} 
void quick_sort(int *num, int l, int r) {
    int x, y;
     
    i = l;
    j = r;
    x = num[(l + r) / 2];
     
    while(i <= j) {
        while(num[i] < x && i < r) {
            i++;
        }
        while(num[j] > x && j > l) {
            j--;
        }
        if(i <= j) {
            y = num[i];
            num[i] = num[j];
            num[j] = y;
            i++;
            j--;
        }
    }
     
    if(j > l) {
        quick_sort(num, l, j);
    }
    if(i < r) {
        quick_sort(num, i, r);
	}
}
void merge (int *num) {
	int min, aux;
  	for (i = 0; i < (max - 1); i++) {
    	min = i;
    	for (j = i+1; j < max; j++) {
      		if (num[j] < num[min]) {
   			min = j;
      		}
    	}
	    if (i != min) {
	      	aux = num[i];
	      	num[i] = num[min];
	      	num[min] = aux;
	    }
  	}
}