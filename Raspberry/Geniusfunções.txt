#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include "funcoes.h"

#define IN 1
#define OUT 0

#define HIGH 1
#define LOW 0

#define EXPORT 1
#define UNEXPORT 0

#define BUFFER_MAX 3
#define DIRECTION_MAX 35
#define VALUE_MAX 35

#define FORCE 1
#define NFORCE -1



int GPIO(int pin, int func)
{
	int arq;
	ssize_t Bytes;
	char Buffer[BUFFER_MAX];

	if (func == EXPORT)
	{

		arq = open("/sys/class/gpio/export", O_WRONLY);

		if (arq == -1)
			return -1;

		Bytes = snprintf(Buffer, 3, "%d", pin);
		if(-1 == write(arq, Buffer, Bytes))
		{
			close(arq);
			return -1;
		}

		close(arq);
		
	}
	else if (func == UNEXPORT)
	{
		arq = open("/sys/class/gpio/unexport", O_WRONLY);
		if (arq == -1)
			return -1;
		Bytes = snprintf(Buffer, 3, "%d", pin);
		if(-1 == write(arq, Buffer, Bytes))
		{
			close(arq);
			return -1;
		}

		close(arq);
	}
	else return -1;

	return 0;
}

int GPIODirection(int pin, int direction,int forcar)
{
	int arq;
	char Direction[DIRECTION_MAX];


	if(GPIO(pin, EXPORT) == -1){
		if(forcar == FORCE)
			GPIO(pin, EXPORT);
		else return -1;
	}
	
		
	
	if (direction == OUT)
	{
		snprintf(Direction, DIRECTION_MAX, "/sys/class/gpio/gpio%d/direction", pin);
		arq = open(Direction, O_WRONLY);
		if (arq == -1)
			return -1;

		if(-1 == write(arq, "out", 3))
		{
			close(arq);
			return -1;
		}

		close(arq);

	}
	else if (direction == IN)
	{
		snprintf(Direction, DIRECTION_MAX, "/sys/class/gpio/gpio%d/direction", pin);
		arq = open(Direction, O_WRONLY);
		if (arq == -1)
			return -1;

		if(-1 == write(arq, "in", 2))
		{
			close(arq);
			return -1;
		}

		close(arq);
	}
	else return -1;

	return 0;


}

int GPIORead(int pin)
{
	int arq;
	char Value[VALUE_MAX];
	char value_Str[3];

	snprintf(Value, VALUE_MAX, "/sys/class/gpio/gpio%d/value", pin);
	arq = open(Value, O_RDONLY);

	if (arq == -1)
		return -1;

	if(-1 == read(arq, value_Str, 3))
	{
		close(arq);
		return -1;
	}
	else read(arq, value_Str, 3);
	close(arq);

	return(atoi(value_Str));
}

int GPIOWrite(int pin, int value)
{
	char Value[VALUE_MAX];
	int arq;

	if (value == HIGH)
	{
		snprintf(Value, VALUE_MAX, "/sys/class/gpio/gpio%d/value", pin);
		arq = open(Value, O_WRONLY);
		if (arq == -1)
			return -1;

		if(-1 == write(arq, "1", 1))
		{
			close(arq);
			return -1;
		}
		else write(arq, "1", 1);
		close(arq);
		return 1;

	
	}
	else if (value == LOW)
	{
		snprintf(Value, VALUE_MAX, "/sys/class/gpio/gpio%d/value", pin);
		arq = open(Value, O_WRONLY);
		if (arq == -1)
			return -1;


		if(-1 == write(arq, "0", 1))
		{
			close(arq);
			return -1;
		}
		close(arq);
		
	
	}
	else return -1;

	return 0;
}




void regras(){
    printf("\n\n\n|-----------------Regras do Jogo Genius-----------------|\n\n");
    printf("Esse jogo consiste em 6 niveis:\n");
    printf("\n1)Easy - onde o tempo e de 2(dois) segundos.\n2)Medium - onde o tempo e de 1(um) segundo.\n3)Hard - onde o tempo e de 0.5(meio) segundo.\n4)Expert - onde o tem e de 0.25(vinte e cinco decimos) segundos.\n5)Professional - onde o tempo e de 0.15(quinze decimos) segundos.\n6) Chuck Norris - Treine bastante para esse nivel.\n");
    printf("\nO jogo funciona da seguinte Maneira:\n\nSera gerado um numero aleatorio e mostrara para o usuario por um determinado \ntempo e depois sumira da tela, em seguida devera descobrir esse numero.\n");
    printf("Primeiro comecara com 1(um) numero, se acertar, gerara mais dois numeros \naleatorios, e assim por diante.");
}

void menu(){
    printf("\n|-----------Genius----------|\n");
    printf("| 1 - Comecar o jogo        |\n");
    printf("| 2 - Regras                |\n");
    printf("| 3 - Sair                  |\n");
    printf("Opcao: ");
    printf(" ");
}

void nivel(){
	printf("\n|-------------Escolha um nivel-----------|\n");
        printf("| 1 - Easy                               |\n");
        printf("| 2 - Medium                             |\n");
        printf("| 3 - Hard                               |\n");
        printf("| 4 - Expert                             |\n");
        printf("| 5 - Professional                       |\n");
        printf("| 6 - Chuck Norris                       |\n");
	printf("| 7 - Sair                               |\n");
	printf("Opcao: ");
	printf(" ");
}